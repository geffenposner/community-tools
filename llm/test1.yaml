tools:
  - name: chat_completion
    description: >
      A tool that performs chat completion using the specified API.
      Very useful if you want to use AI in order to perform a task or instruction.
      Receives prompt as an input.
    type: python
    content: |
      import os
      from litellm import completion

      # Ensure API keys are set
      openai_api_key = os.getenv("OPENAI_API_KEY")
      openai_api_base = os.getenv("OPENAI_API_BASE")

      if not openai_api_key or not openai_api_base:
          print("OPENAI_API_KEY and OPENAI_API_BASE environment variables must be set.")
          exit(1)

      def perform_completion(prompt: str) -> str:
          messages = [{"content": prompt, "role": "user"}]
          try:
              # Call OpenAI
              response = completion(model="azure/gpt-4o", messages=messages)
              return response['choices'][0]['message']['content']
          except Exception as e:
              print(f"Completion failed: {e}")
              exit(1)

      if __name__ == "__main__":
          prompt = "{{.prompt}}"
          result = perform_completion(prompt)
          print(result)
    dependencies: |
      litellm
    args:
      prompt:
        description: The prompt for the LLM
        required: true
    env:
      - OPENAI_API_KEY
      - OPENAI_API_BASE
      - asdasdrte
      - asdasda